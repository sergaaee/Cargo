# Generated by Django 5.0.3 on 2024-09-10 07:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Incoming',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('track_number', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Track Number')),
                ('places_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Places count')),
                ('arrival_date', models.DateTimeField(blank=True, null=True, verbose_name='Arrival date')),
                ('size', models.CharField(blank=True, null=True, verbose_name='Size (LxHxW)')),
                ('weight', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Weight (kg)')),
                ('state', models.CharField(choices=[('Perfect', 'Perfect'), ('Broken package', 'Broken Package'), ('Broken item', 'Broken Item'), ('Lost', 'Lost')], default='Perfect', max_length=100, verbose_name='State')),
                ('package_type', models.CharField(choices=[('Cartoon Box', 'Cartoon Box'), ('Envelope', 'Envelope'), ('Scotch Tape Bag', 'Scotch Tape Bag'), ('Case', 'Case')], default='Cartoon Box', max_length=100, verbose_name='Package type')),
                ('status', models.CharField(choices=[('Received', 'Received'), ('Declined', 'Declined'), ('To Deliver', 'To Deliver'), ('Stored', 'Stored'), ('Undecided', 'Undecided')], default='Undecided', max_length=100, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Incoming',
                'verbose_name_plural': 'Incomings',
            },
        ),
        migrations.CreateModel(
            name='InventoryNumber',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryNumberIncoming',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incoming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.incoming')),
                ('inventory_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.inventorynumber')),
            ],
        ),
        migrations.AddField(
            model_name='incoming',
            name='inventory_numbers',
            field=models.ManyToManyField(blank=True, related_name='incoming_inventory_numbers', through='deliveries.InventoryNumberIncoming', to='deliveries.inventorynumber'),
        ),
        migrations.AddField(
            model_name='inventorynumber',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='deliveries.location'),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(upload_to='images/')),
                ('incoming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images_set', to='deliveries.incoming')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhotoIncoming',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incoming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.incoming')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.photo')),
            ],
        ),
        migrations.AddField(
            model_name='incoming',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='incoming_images', through='deliveries.PhotoIncoming', to='deliveries.photo'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'indexes': [models.Index(fields=['id'], name='tag_pkey'), models.Index(fields=['name'], name='tag_name_idx')],
            },
        ),
        migrations.AddField(
            model_name='incoming',
            name='tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='deliveries.tag'),
        ),
        migrations.CreateModel(
            name='TagIncoming',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incoming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.incoming')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deliveries.tag')),
            ],
        ),
        migrations.AddIndex(
            model_name='inventorynumberincoming',
            index=models.Index(fields=['incoming_id', 'inventory_number_id'], name='inventory_number_incoming_idx'),
        ),
        migrations.AddIndex(
            model_name='photoincoming',
            index=models.Index(fields=['incoming_id', 'photo_id'], name='photo_incoming_idx'),
        ),
        migrations.AddIndex(
            model_name='incoming',
            index=models.Index(fields=['id'], name='incoming_idx'),
        ),
        migrations.AddIndex(
            model_name='incoming',
            index=models.Index(fields=['track_number'], name='incoming_track_number_idx'),
        ),
        migrations.AddIndex(
            model_name='tagincoming',
            index=models.Index(fields=['incoming_id', 'tag_id'], name='tag_incoming_idx'),
        ),
    ]
